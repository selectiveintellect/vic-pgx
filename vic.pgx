%grammar vic
%version 0.0.1
#COPYRIGHT: 2014 Vikas N Kumar <vikas@cpan.org>. All Rights Reserved

# uc-select is necessary.
program: uc-select header* statement*

header: uc-header | comment
uc-select: /PIC <BLANK>+ (<uc-types>) <SEMI> <EOL>/

# P16F690X is fake just to show how to enumerate.
uc-types: /(?i:P16F690 | P16F690X)/
uc-header: /set <UNDER> (config|org) <BLANK>* (<ANY>*) <SEMI> <EOL>/
comment: /<BLANK>* <HASH> <ANY>* <EOL>/ | blank-line
blank-line: whitespace* /<EOL>/
whitespace: /<BLANK>+/

statement: comment | block | instruction | end-block

block: name /<BLANK>* <LCURLY> <BLANK>* <EOL>?/
end-block: /<BLANK>* <RCURLY> <BLANK>* <EOL>?/

instruction: name values* whitespace* <SEMI>

name: whitespace* identifier whitespace*
values: value-comma* value
value-comma: value /<COMMA>/
value: whitespace* (string | number-units | number | variable) whitespace*

string: single-quoted-string | double-quoted-string

# most microcontrollers cannot do floating point math so ignore real numbers
number-units: number whitespace* units
# number handles both hex and non-hex values for ease of use
number: /(0x<HEX>+ | 0X<HEX>+ | <DIGIT>+)/
units: /(s | ms | us)/

variable: <DOLLAR> identifier
identifier: /(<ALPHA>[<WORDS>]*)/

single_quoted_string:
    /(:
        <SINGLE>
        ((:
            [^<BREAK><BACK><SINGLE>] |
            <BACK><SINGLE> |
            <BACK><BACK>
        )*?)
        <SINGLE>
    )/

double_quoted_string:
    /(:
        <DOUBLE>
        ((:
            [^<BREAK><BACK><DOUBLE>] |
            <BACK><DOUBLE> |
            <BACK><BACK> |
            <BACK><escape>
        )*?)
        <DOUBLE>
    )/

escape: / [0nt] /
